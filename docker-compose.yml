services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: astroaxis_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-natiss_natiss}
      POSTGRES_DB: axis_db
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d:ro
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d axis_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - astroaxis_network

  # FastAPI Backend (serves API + Frontend)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: astroaxis_backend
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:${DB_PASSWORD:-natiss_natiss}@db:5432/axis_db
      SECRET_KEY: ${SECRET_KEY:-your-super-secret-key-change-this-in-production}
      DEBUG: ${DEBUG:-False}
      ENVIRONMENT: ${ENVIRONMENT:-production}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '80:8004'
      - '8004:8004'
    volumes:
      - ./backend:/app
      - ./frontend/build:/app/frontend/build:ro
    command: uvicorn app.main:app --host 0.0.0.0 --port 8004 --workers 2
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - astroaxis_network

volumes:
  pgdata:
    driver: local

networks:
  astroaxis_network:
    driver: bridge
