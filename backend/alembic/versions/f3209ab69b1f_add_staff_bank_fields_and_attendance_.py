"""Add staff bank fields and attendance model

Revision ID: f3209ab69b1f
Revises: 
Create Date: 2025-10-24 23:15:31.767449

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f3209ab69b1f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('attendance',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('staff_id', sa.UUID(), nullable=False),
    sa.Column('clock_in', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('clock_out', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('hours_worked', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['staff_id'], ['staff.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_attendance_staff_id'), 'attendance', ['staff_id'], unique=False)
    op.create_index(op.f('ix_bom_lines_bom_id'), 'bom_lines', ['bom_id'], unique=False)
    op.create_index(op.f('ix_boms_product_id'), 'boms', ['product_id'], unique=False)
    op.drop_constraint('customers_customer_code_key', 'customers', type_='unique')
    op.drop_index('idx_customers_active', table_name='customers')
    op.drop_index('idx_customers_code', table_name='customers')
    op.drop_index('idx_customers_email', table_name='customers')
    op.create_index(op.f('ix_customers_customer_code'), 'customers', ['customer_code'], unique=True)
    op.create_index(op.f('ix_customers_email'), 'customers', ['email'], unique=False)
    op.drop_constraint('employees_employee_number_key', 'employees', type_='unique')
    op.drop_index('idx_employees_active', table_name='employees')
    op.drop_index('idx_employees_department', table_name='employees')
    op.drop_index('idx_employees_number', table_name='employees')
    op.create_index(op.f('ix_employees_department_id'), 'employees', ['department_id'], unique=False)
    op.create_index(op.f('ix_employees_employee_number'), 'employees', ['employee_number'], unique=True)
    op.create_index(op.f('ix_employees_user_id'), 'employees', ['user_id'], unique=False)
    op.alter_column('invoice_lines', 'unit_price',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Numeric(precision=18, scale=6),
               existing_nullable=False)
    op.alter_column('invoice_lines', 'line_total',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               type_=sa.Numeric(precision=18, scale=2),
               existing_nullable=False)
    op.drop_column('invoice_lines', 'description')
    op.add_column('invoices', sa.Column('paid_amount', sa.Numeric(precision=18, scale=2), nullable=True))
    op.alter_column('invoices', 'invoice_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('invoices', 'total_amount',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               type_=sa.Numeric(precision=18, scale=2),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('invoices', 'status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=32),
               existing_nullable=True,
               existing_server_default=sa.text("'pending'::character varying"))
    op.drop_index('idx_invoices_customer', table_name='invoices')
    op.drop_index('idx_invoices_date', table_name='invoices')
    op.drop_index('idx_invoices_status', table_name='invoices')
    op.drop_constraint('invoices_invoice_number_key', 'invoices', type_='unique')
    op.create_index(op.f('ix_invoices_invoice_number'), 'invoices', ['invoice_number'], unique=True)
    op.drop_constraint('invoices_created_by_fkey', 'invoices', type_='foreignkey')
    op.drop_column('invoices', 'tax_amount')
    op.drop_column('invoices', 'amount_paid')
    op.drop_column('invoices', 'subtotal')
    op.drop_column('invoices', 'created_by')
    op.alter_column('payments', 'payment_method',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('payments', 'amount',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               type_=sa.Numeric(precision=18, scale=2),
               existing_nullable=False)
    op.alter_column('payments', 'payment_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('idx_payments_invoice', table_name='payments')
    op.drop_constraint('payments_created_by_fkey', 'payments', type_='foreignkey')
    op.drop_column('payments', 'created_by')
    op.add_column('payroll_entries', sa.Column('regular_hours', sa.Numeric(precision=5, scale=2), nullable=True))
    op.alter_column('payroll_entries', 'gross_pay',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Numeric(precision=18, scale=2),
               existing_nullable=False)
    op.alter_column('payroll_entries', 'deductions',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Numeric(precision=18, scale=2),
               existing_nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('payroll_entries', 'net_pay',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Numeric(precision=18, scale=2),
               existing_nullable=False)
    op.alter_column('payroll_entries', 'status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=32),
               existing_nullable=True,
               existing_server_default=sa.text("'draft'::character varying"))
    op.drop_index('idx_payroll_period', table_name='payroll_entries')
    op.drop_index('idx_payroll_staff', table_name='payroll_entries')
    op.drop_column('payroll_entries', 'base_salary')
    op.drop_column('payroll_entries', 'bonus')
    op.drop_column('payroll_entries', 'overtime_rate')
    op.create_index(op.f('ix_product_costs_product_id'), 'product_costs', ['product_id'], unique=False)
    op.add_column('production_labor_logs', sa.Column('work_date', sa.Date(), nullable=False))
    op.add_column('production_labor_logs', sa.Column('total_cost', sa.Numeric(precision=18, scale=2), nullable=False))
    op.add_column('production_labor_logs', sa.Column('description', sa.Text(), nullable=True))
    op.alter_column('production_labor_logs', 'hours_worked',
               existing_type=sa.NUMERIC(precision=5, scale=2),
               nullable=False)
    op.alter_column('production_labor_logs', 'hourly_rate',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               nullable=False)
    op.drop_column('production_labor_logs', 'start_time')
    op.drop_column('production_labor_logs', 'notes')
    op.drop_column('production_labor_logs', 'end_time')
    op.drop_index('idx_production_order_materials_material_id', table_name='production_order_materials')
    op.drop_index('idx_production_order_materials_order_id', table_name='production_order_materials')
    op.create_index(op.f('ix_production_order_materials_production_order_id'), 'production_order_materials', ['production_order_id'], unique=False)
    op.alter_column('production_orders', 'status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False,
               existing_server_default=sa.text("'planned'::character varying"))
    op.drop_index('idx_production_orders_dates', table_name='production_orders')
    op.drop_index('idx_production_orders_product', table_name='production_orders')
    op.drop_index('idx_production_orders_product_id', table_name='production_orders')
    op.drop_index('idx_production_orders_status', table_name='production_orders')
    op.drop_constraint('production_orders_order_number_key', 'production_orders', type_='unique')
    op.create_index(op.f('ix_production_orders_order_number'), 'production_orders', ['order_number'], unique=True)
    op.create_index(op.f('ix_production_orders_product_id'), 'production_orders', ['product_id'], unique=False)
    op.drop_constraint('products_sku_key', 'products', type_='unique')
    op.create_index(op.f('ix_products_sku'), 'products', ['sku'], unique=True)
    op.drop_constraint('raw_materials_sku_key', 'raw_materials', type_='unique')
    op.create_index(op.f('ix_raw_materials_sku'), 'raw_materials', ['sku'], unique=True)
    op.alter_column('sales_order_lines', 'unit_price',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Numeric(precision=18, scale=6),
               existing_nullable=False)
    op.alter_column('sales_order_lines', 'line_total',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               type_=sa.Numeric(precision=18, scale=2),
               existing_nullable=False)
    op.drop_index('idx_sales_order_lines_order_id', table_name='sales_order_lines')
    op.drop_index('idx_sales_order_lines_product_id', table_name='sales_order_lines')
    op.create_index(op.f('ix_sales_order_lines_sales_order_id'), 'sales_order_lines', ['sales_order_id'], unique=False)
    op.drop_column('sales_order_lines', 'notes')
    op.add_column('sales_orders', sa.Column('required_date', sa.TIMESTAMP(timezone=True), nullable=True))
    op.alter_column('sales_orders', 'status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=32),
               nullable=False,
               existing_server_default=sa.text("'pending'::character varying"))
    op.alter_column('sales_orders', 'order_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('sales_orders', 'total_amount',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               type_=sa.Numeric(precision=18, scale=2),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.drop_index('idx_sales_orders_customer', table_name='sales_orders')
    op.drop_index('idx_sales_orders_customer_id', table_name='sales_orders')
    op.drop_index('idx_sales_orders_date', table_name='sales_orders')
    op.drop_index('idx_sales_orders_order_date', table_name='sales_orders')
    op.drop_index('idx_sales_orders_status', table_name='sales_orders')
    op.drop_constraint('sales_orders_order_number_key', 'sales_orders', type_='unique')
    op.create_index(op.f('ix_sales_orders_customer_id'), 'sales_orders', ['customer_id'], unique=False)
    op.create_index(op.f('ix_sales_orders_order_number'), 'sales_orders', ['order_number'], unique=True)
    op.drop_column('sales_orders', 'tax_amount')
    op.drop_column('sales_orders', 'subtotal')
    op.drop_column('sales_orders', 'actual_delivery_date')
    op.drop_column('sales_orders', 'expected_delivery_date')
    op.add_column('staff', sa.Column('bank_name', sa.String(length=128), nullable=True))
    op.add_column('staff', sa.Column('bank_account_number', sa.String(length=64), nullable=True))
    op.add_column('staff', sa.Column('bank_account_name', sa.String(length=128), nullable=True))
    op.add_column('staff', sa.Column('bank_currency', sa.String(length=8), nullable=True))
    op.drop_index('idx_staff_employee_id', table_name='staff')
    op.drop_constraint('staff_employee_id_key', 'staff', type_='unique')
    op.create_index(op.f('ix_staff_employee_id'), 'staff', ['employee_id'], unique=True)
    op.drop_index('idx_stock_levels_product', table_name='stock_levels')
    op.drop_index('idx_stock_levels_raw_material', table_name='stock_levels')
    op.drop_index('idx_stock_levels_warehouse', table_name='stock_levels')
    op.drop_constraint('stock_levels_warehouse_id_product_id_raw_material_id_key', 'stock_levels', type_='unique')
    op.create_index(op.f('ix_stock_levels_product_id'), 'stock_levels', ['product_id'], unique=False)
    op.create_index(op.f('ix_stock_levels_raw_material_id'), 'stock_levels', ['raw_material_id'], unique=False)
    op.create_index(op.f('ix_stock_levels_warehouse_id'), 'stock_levels', ['warehouse_id'], unique=False)
    op.drop_index('idx_stock_movements_created', table_name='stock_movements')
    op.drop_index('idx_stock_movements_product', table_name='stock_movements')
    op.drop_index('idx_stock_movements_raw_material', table_name='stock_movements')
    op.drop_index('idx_stock_movements_type', table_name='stock_movements')
    op.drop_index('idx_stock_movements_warehouse', table_name='stock_movements')
    op.create_index(op.f('ix_stock_movements_product_id'), 'stock_movements', ['product_id'], unique=False)
    op.create_index(op.f('ix_stock_movements_raw_material_id'), 'stock_movements', ['raw_material_id'], unique=False)
    op.create_index(op.f('ix_stock_movements_warehouse_id'), 'stock_movements', ['warehouse_id'], unique=False)
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.drop_constraint('warehouses_code_key', 'warehouses', type_='unique')
    op.create_index(op.f('ix_warehouses_code'), 'warehouses', ['code'], unique=True)
    op.drop_index('idx_work_logs_employee_id', table_name='work_logs')
    op.drop_index('idx_work_logs_production_order_id', table_name='work_logs')
    op.drop_index('idx_work_logs_work_date', table_name='work_logs')
    op.create_index(op.f('ix_work_logs_employee_id'), 'work_logs', ['employee_id'], unique=False)
    op.create_index(op.f('ix_work_logs_production_order_id'), 'work_logs', ['production_order_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_work_logs_production_order_id'), table_name='work_logs')
    op.drop_index(op.f('ix_work_logs_employee_id'), table_name='work_logs')
    op.create_index('idx_work_logs_work_date', 'work_logs', ['work_date'], unique=False)
    op.create_index('idx_work_logs_production_order_id', 'work_logs', ['production_order_id'], unique=False)
    op.create_index('idx_work_logs_employee_id', 'work_logs', ['employee_id'], unique=False)
    op.drop_index(op.f('ix_warehouses_code'), table_name='warehouses')
    op.create_unique_constraint('warehouses_code_key', 'warehouses', ['code'])
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.drop_index(op.f('ix_stock_movements_warehouse_id'), table_name='stock_movements')
    op.drop_index(op.f('ix_stock_movements_raw_material_id'), table_name='stock_movements')
    op.drop_index(op.f('ix_stock_movements_product_id'), table_name='stock_movements')
    op.create_index('idx_stock_movements_warehouse', 'stock_movements', ['warehouse_id'], unique=False)
    op.create_index('idx_stock_movements_type', 'stock_movements', ['movement_type'], unique=False)
    op.create_index('idx_stock_movements_raw_material', 'stock_movements', ['raw_material_id'], unique=False)
    op.create_index('idx_stock_movements_product', 'stock_movements', ['product_id'], unique=False)
    op.create_index('idx_stock_movements_created', 'stock_movements', ['created_at'], unique=False)
    op.drop_index(op.f('ix_stock_levels_warehouse_id'), table_name='stock_levels')
    op.drop_index(op.f('ix_stock_levels_raw_material_id'), table_name='stock_levels')
    op.drop_index(op.f('ix_stock_levels_product_id'), table_name='stock_levels')
    op.create_unique_constraint('stock_levels_warehouse_id_product_id_raw_material_id_key', 'stock_levels', ['warehouse_id', 'product_id', 'raw_material_id'])
    op.create_index('idx_stock_levels_warehouse', 'stock_levels', ['warehouse_id'], unique=False)
    op.create_index('idx_stock_levels_raw_material', 'stock_levels', ['raw_material_id'], unique=False)
    op.create_index('idx_stock_levels_product', 'stock_levels', ['product_id'], unique=False)
    op.drop_index(op.f('ix_staff_employee_id'), table_name='staff')
    op.create_unique_constraint('staff_employee_id_key', 'staff', ['employee_id'])
    op.create_index('idx_staff_employee_id', 'staff', ['employee_id'], unique=False)
    op.drop_column('staff', 'bank_currency')
    op.drop_column('staff', 'bank_account_name')
    op.drop_column('staff', 'bank_account_number')
    op.drop_column('staff', 'bank_name')
    op.add_column('sales_orders', sa.Column('expected_delivery_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('sales_orders', sa.Column('actual_delivery_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('sales_orders', sa.Column('subtotal', sa.NUMERIC(precision=12, scale=2), server_default=sa.text('0'), autoincrement=False, nullable=False))
    op.add_column('sales_orders', sa.Column('tax_amount', sa.NUMERIC(precision=12, scale=2), server_default=sa.text('0'), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_sales_orders_order_number'), table_name='sales_orders')
    op.drop_index(op.f('ix_sales_orders_customer_id'), table_name='sales_orders')
    op.create_unique_constraint('sales_orders_order_number_key', 'sales_orders', ['order_number'])
    op.create_index('idx_sales_orders_status', 'sales_orders', ['status'], unique=False)
    op.create_index('idx_sales_orders_order_date', 'sales_orders', ['order_date'], unique=False)
    op.create_index('idx_sales_orders_date', 'sales_orders', ['order_date'], unique=False)
    op.create_index('idx_sales_orders_customer_id', 'sales_orders', ['customer_id'], unique=False)
    op.create_index('idx_sales_orders_customer', 'sales_orders', ['customer_id'], unique=False)
    op.alter_column('sales_orders', 'total_amount',
               existing_type=sa.Numeric(precision=18, scale=2),
               type_=sa.NUMERIC(precision=12, scale=2),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('sales_orders', 'order_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('sales_orders', 'status',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text("'pending'::character varying"))
    op.drop_column('sales_orders', 'required_date')
    op.add_column('sales_order_lines', sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_sales_order_lines_sales_order_id'), table_name='sales_order_lines')
    op.create_index('idx_sales_order_lines_product_id', 'sales_order_lines', ['product_id'], unique=False)
    op.create_index('idx_sales_order_lines_order_id', 'sales_order_lines', ['sales_order_id'], unique=False)
    op.alter_column('sales_order_lines', 'line_total',
               existing_type=sa.Numeric(precision=18, scale=2),
               type_=sa.NUMERIC(precision=12, scale=2),
               existing_nullable=False)
    op.alter_column('sales_order_lines', 'unit_price',
               existing_type=sa.Numeric(precision=18, scale=6),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=False)
    op.drop_index(op.f('ix_raw_materials_sku'), table_name='raw_materials')
    op.create_unique_constraint('raw_materials_sku_key', 'raw_materials', ['sku'])
    op.drop_index(op.f('ix_products_sku'), table_name='products')
    op.create_unique_constraint('products_sku_key', 'products', ['sku'])
    op.drop_index(op.f('ix_production_orders_product_id'), table_name='production_orders')
    op.drop_index(op.f('ix_production_orders_order_number'), table_name='production_orders')
    op.create_unique_constraint('production_orders_order_number_key', 'production_orders', ['order_number'])
    op.create_index('idx_production_orders_status', 'production_orders', ['status'], unique=False)
    op.create_index('idx_production_orders_product_id', 'production_orders', ['product_id'], unique=False)
    op.create_index('idx_production_orders_product', 'production_orders', ['product_id'], unique=False)
    op.create_index('idx_production_orders_dates', 'production_orders', ['scheduled_start_date', 'scheduled_end_date'], unique=False)
    op.alter_column('production_orders', 'status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text("'planned'::character varying"))
    op.drop_index(op.f('ix_production_order_materials_production_order_id'), table_name='production_order_materials')
    op.create_index('idx_production_order_materials_order_id', 'production_order_materials', ['production_order_id'], unique=False)
    op.create_index('idx_production_order_materials_material_id', 'production_order_materials', ['raw_material_id'], unique=False)
    op.add_column('production_labor_logs', sa.Column('end_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('production_labor_logs', sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('production_labor_logs', sa.Column('start_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    op.alter_column('production_labor_logs', 'hourly_rate',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               nullable=True)
    op.alter_column('production_labor_logs', 'hours_worked',
               existing_type=sa.NUMERIC(precision=5, scale=2),
               nullable=True)
    op.drop_column('production_labor_logs', 'description')
    op.drop_column('production_labor_logs', 'total_cost')
    op.drop_column('production_labor_logs', 'work_date')
    op.drop_index(op.f('ix_product_costs_product_id'), table_name='product_costs')
    op.add_column('payroll_entries', sa.Column('overtime_rate', sa.NUMERIC(precision=10, scale=2), server_default=sa.text('0'), autoincrement=False, nullable=True))
    op.add_column('payroll_entries', sa.Column('bonus', sa.NUMERIC(precision=10, scale=2), server_default=sa.text('0'), autoincrement=False, nullable=True))
    op.add_column('payroll_entries', sa.Column('base_salary', sa.NUMERIC(precision=10, scale=2), server_default=sa.text('0'), autoincrement=False, nullable=False))
    op.create_index('idx_payroll_staff', 'payroll_entries', ['staff_id'], unique=False)
    op.create_index('idx_payroll_period', 'payroll_entries', ['pay_period_start', 'pay_period_end'], unique=False)
    op.alter_column('payroll_entries', 'status',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'draft'::character varying"))
    op.alter_column('payroll_entries', 'net_pay',
               existing_type=sa.Numeric(precision=18, scale=2),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=False)
    op.alter_column('payroll_entries', 'deductions',
               existing_type=sa.Numeric(precision=18, scale=2),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('payroll_entries', 'gross_pay',
               existing_type=sa.Numeric(precision=18, scale=2),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=False)
    op.drop_column('payroll_entries', 'regular_hours')
    op.add_column('payments', sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key('payments_created_by_fkey', 'payments', 'users', ['created_by'], ['id'])
    op.create_index('idx_payments_invoice', 'payments', ['invoice_id'], unique=False)
    op.alter_column('payments', 'payment_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('payments', 'amount',
               existing_type=sa.Numeric(precision=18, scale=2),
               type_=sa.NUMERIC(precision=12, scale=2),
               existing_nullable=False)
    op.alter_column('payments', 'payment_method',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.add_column('invoices', sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('invoices', sa.Column('subtotal', sa.NUMERIC(precision=12, scale=2), server_default=sa.text('0'), autoincrement=False, nullable=False))
    op.add_column('invoices', sa.Column('amount_paid', sa.NUMERIC(precision=12, scale=2), server_default=sa.text('0'), autoincrement=False, nullable=True))
    op.add_column('invoices', sa.Column('tax_amount', sa.NUMERIC(precision=12, scale=2), server_default=sa.text('0'), autoincrement=False, nullable=True))
    op.create_foreign_key('invoices_created_by_fkey', 'invoices', 'users', ['created_by'], ['id'])
    op.drop_index(op.f('ix_invoices_invoice_number'), table_name='invoices')
    op.create_unique_constraint('invoices_invoice_number_key', 'invoices', ['invoice_number'])
    op.create_index('idx_invoices_status', 'invoices', ['status'], unique=False)
    op.create_index('idx_invoices_date', 'invoices', ['invoice_date'], unique=False)
    op.create_index('idx_invoices_customer', 'invoices', ['customer_id'], unique=False)
    op.alter_column('invoices', 'status',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'pending'::character varying"))
    op.alter_column('invoices', 'total_amount',
               existing_type=sa.Numeric(precision=18, scale=2),
               type_=sa.NUMERIC(precision=12, scale=2),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('invoices', 'invoice_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_column('invoices', 'paid_amount')
    op.add_column('invoice_lines', sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True))
    op.alter_column('invoice_lines', 'line_total',
               existing_type=sa.Numeric(precision=18, scale=2),
               type_=sa.NUMERIC(precision=12, scale=2),
               existing_nullable=False)
    op.alter_column('invoice_lines', 'unit_price',
               existing_type=sa.Numeric(precision=18, scale=6),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=False)
    op.drop_index(op.f('ix_employees_user_id'), table_name='employees')
    op.drop_index(op.f('ix_employees_employee_number'), table_name='employees')
    op.drop_index(op.f('ix_employees_department_id'), table_name='employees')
    op.create_index('idx_employees_number', 'employees', ['employee_number'], unique=False)
    op.create_index('idx_employees_department', 'employees', ['department_id'], unique=False)
    op.create_index('idx_employees_active', 'employees', ['is_active'], unique=False)
    op.create_unique_constraint('employees_employee_number_key', 'employees', ['employee_number'])
    op.drop_index(op.f('ix_customers_email'), table_name='customers')
    op.drop_index(op.f('ix_customers_customer_code'), table_name='customers')
    op.create_index('idx_customers_email', 'customers', ['email'], unique=False)
    op.create_index('idx_customers_code', 'customers', ['customer_code'], unique=False)
    op.create_index('idx_customers_active', 'customers', ['is_active'], unique=False)
    op.create_unique_constraint('customers_customer_code_key', 'customers', ['customer_code'])
    op.drop_index(op.f('ix_boms_product_id'), table_name='boms')
    op.drop_index(op.f('ix_bom_lines_bom_id'), table_name='bom_lines')
    op.drop_index(op.f('ix_attendance_staff_id'), table_name='attendance')
    op.drop_table('attendance')
    # ### end Alembic commands ###
